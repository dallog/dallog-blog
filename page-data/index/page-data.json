{"componentChunkName":"component---src-pages-index-jsx","path":"/","result":{"data":{"site":{"siteMetadata":{"title":"dal.log"}},"allMarkdownRemark":{"group":[{"fieldValue":"Auditing","totalCount":1},{"fieldValue":"BE","totalCount":5},{"fieldValue":"ConfigurationProperties","totalCount":1},{"fieldValue":"Data JPA","totalCount":2},{"fieldValue":"DevOps","totalCount":10},{"fieldValue":"HTTPS","totalCount":1},{"fieldValue":"JPA","totalCount":2},{"fieldValue":"Jenkins","totalCount":1},{"fieldValue":"NGINX","totalCount":1},{"fieldValue":"Page","totalCount":1},{"fieldValue":"Rest API","totalCount":1},{"fieldValue":"Slice","totalCount":1},{"fieldValue":"Spring","totalCount":4},{"fieldValue":"Value","totalCount":1},{"fieldValue":"WS","totalCount":1},{"fieldValue":"deploy","totalCount":3},{"fieldValue":"git","totalCount":1},{"fieldValue":"git-flow","totalCount":1},{"fieldValue":"intellij","totalCount":1},{"fieldValue":"properties","totalCount":1},{"fieldValue":"react","totalCount":3},{"fieldValue":"react-query","totalCount":1},{"fieldValue":"test fixture","totalCount":1},{"fieldValue":"달록","totalCount":1},{"fieldValue":"매트","totalCount":5},{"fieldValue":"분리된 인터페이스","totalCount":1},{"fieldValue":"상수","totalCount":1},{"fieldValue":"슬라이스 테스트","totalCount":1},{"fieldValue":"의존성 분리","totalCount":1},{"fieldValue":"테스트 격리","totalCount":1},{"fieldValue":"통합 테스트","totalCount":1},{"fieldValue":"패키지 구조","totalCount":1}],"nodes":[{"excerpt":"이 글은 우테코 달록팀 크루 후디가 작성했습니다. 코드 커버리지란? 코드 커버리지란, 테스트 코드가 프로덕션 코드를 얼마나 실행했는지를 백분율로 나타내는 지표입니다. 즉, 테스트 코드가 실제로 프로덕션 코드를 얼마나 몇 퍼센트 검증하고 있는지를 나타냅니다. 코드 커버리지를 통해 현재 작성된 테스트 코드의 수가 충분한것인지 논의할 수 있습니다. 더 자세한 …","fields":{"slug":"/dallog-jacoco/"},"frontmatter":{"date":"August 16, 2022","update":null,"title":"달록의 Jacoco 적용기 (feat. Gradle)","tags":["DevOps"]}},{"excerpt":"이 글은 우테코 달록팀 크루 후디가 작성했습니다. 문제 상황 현재 달록팀 젠킨스 설정상 프론트엔드와 백엔드 배포를 한 인스턴스에서 진행합니다.  브랜치에 소스코드가 병합되면, 이것이 트리거가 되어 프론트엔드와 백엔드 배포 파이프라인 스크립트가 실행됩니다. 아직 별도로 분기처리는 하지 않아 프론트엔드와 백엔드 배포가 동시에 시작됩니다. 하지만, 달록팀이 젠…","fields":{"slug":"/jenkins-build-optimization/"},"frontmatter":{"date":"August 09, 2022","update":null,"title":"젠킨스 빌드 최적화를 향한 여정","tags":["DevOps"]}},{"excerpt":"이 글은 우테코 달록팀 크루 '매트'가 작성했습니다. 테스트는 독립적이어야 하며 공유 자원을 사용하면 안된다. 격리되지 못한 테스트는 테스트에서 Entity 객체를 상수로 두면 안 되는 이유 같이 많은 문제를 야기할 수 있다. 테스트를 격리하는 방법에는 여러가지가 있다. 우리 달록에서는 크게 두 가지 방식을 적용해봤고, 각 방식에 대한 장단점을 확인해보려…","fields":{"slug":"/test-isolation/"},"frontmatter":{"date":"August 09, 2022","update":"Aug 09, 2022","title":"테스트 격리","tags":["달록","매트","테스트 격리","BE"]}},{"excerpt":"이 글은 우테코 달록팀 크루 파랑이 작성했습니다. NGINX 설치 NGINX란? 달록 기술블로그 - 리버의 NGINX 란? 설치 SSL 인증서 발급 (with Certbot) Let’s Encrypt 90일짜리 단기 인증서를 무료로 발급해주는 곳입니다. 주기적으로 재발급 해줘야 합니다. Snapd 설치 snapcraft 공식문서 - Installing s…","fields":{"slug":"/deploy-full-course3/"},"frontmatter":{"date":"August 08, 2022","update":"Aug 08, 2022","title":"달록 배포 총🔫정리 3 - SSL 인증서 발급과 NGINX 설정","tags":["deploy","DevOps"]}},{"excerpt":"이 글은 우테코 달록팀 크루 파랑이 작성했습니다. 실제 배포 설정 그럼 이제 실제로 어떤 과정을 통해 배포를 진행했는지 자세히 살펴보겠습니다. EC2 생성 EC2 → 인스턴스 → 인스턴스 시작 이름 및 태그 이름: ec2-dallog-XXXX 태그:  -  애플리케이션 및 OS 이미지  아키텍처:  인스턴스 유형  키 페어  네트워크 설정 VPC PROJ…","fields":{"slug":"/deploy-full-course2/"},"frontmatter":{"date":"August 07, 2022","update":"Aug 07, 2022","title":"달록 배포 총🔫정리 2 - EC2와 DNS 설정하기","tags":["deploy","DevOps"]}},{"excerpt":"이 글은 우테코 달록팀 크루 파랑이 작성했습니다. 전체적인 구조 배포 과정을 다루기 전에 전체적인 구조부터 살펴볼게요.  총 5개의 EC2를 사용하고 있습니다. 하나하나 살펴보겠습니다. 1. Jenkins 젠킨스를 위한 인스턴스입니다. 젠킨스는 설정이 필요한 부분이 많아 도커 위에 젠킨스를 띄워놓았습니다. 2. FrontEnd 프론트엔드 배포를 위한 인스…","fields":{"slug":"/deploy-full-course1/"},"frontmatter":{"date":"August 07, 2022","update":"Aug 07, 2022","title":"달록 배포 총🔫정리 1 - 전체적인 구조 살펴보기","tags":["deploy","DevOps"]}},{"excerpt":"이 글은 우테코 달록팀 크루 후디가 작성했습니다. 배경 최근 달록팀의 젠킨스 EC2 인스턴스가 문제가 생겼습니다. 여러 문제가 얽혀서 문제의 원인을 추적하고 해결하는 것 보다 인스턴스를 제거하고 새로 띄워 젠킨스를 다시 설치하는 것이 빠를 것 같았습니다. 다행히 젠킨스 설치 및 초기 세팅에 대한 문서화는 잘 되어 있어서 초기에 젠킨스를 설치한 제가 아니더…","fields":{"slug":"/jenkins-pipeline-from-scm/"},"frontmatter":{"date":"August 07, 2022","update":null,"title":"젠킨스 파이프라인 스크립트 형상 관리","tags":["DevOps"]}},{"excerpt":"이 글은 우테코 달록팀 크루 나인이 작성했습니다. UI가 비슷하면 재사용 초반에 개발을 진행할 때 은 대부분 UI였습니다. \"UI가 비슷하면 분명 재사용될 것이니 이 부분들을 묶어서 컴포넌트화하자!\" 다음은 달록의 카테고리 목록을 조회하는 페이지입니다.  BE 공식일정 카테고리 알록달록 팀 회의 카테고리 두 카테고리가 매우 흡사하게 생겼죠? 비슷하게 생겼…","fields":{"slug":"/seperate-components/"},"frontmatter":{"date":"August 01, 2022","update":null,"title":"컴포넌트 분리 기준","tags":["react"]}},{"excerpt":"이 글은 우테코 달록팀 크루 나인이 작성했습니다. React-Query의 캐싱개념은 stale과 cacheTime을 통해 이루어집니다. Stale 사전적 의미로 '신선하지 않은' 입니다. react query는 기본적으로 캐싱된 데이터를 stale하다고 생각합니다. react query에서는 stale time의 default이 0입니다. (즉, 캐싱이 …","fields":{"slug":"/query-invalidation/"},"frontmatter":{"date":"August 01, 2022","update":null,"title":"React-Query에서의 데이터 최신화 (Query Invalidation)","tags":["react","react-query"]}},{"excerpt":"이 글은 우테코 달록팀 크루 '매트'가 작성했습니다. @SpringBootTest  애노테이션을 사용하면 우리 애플리케이션에서 사용하고 있는 모든 빈을 등록한 뒤 간편하게 테스트를 진행한다. 하지만 모든 빈을 등록하기 때문에 아래와 같은 단점을 가질 수 있다. 모든 빈들을 등록하기 때문에 비교적 오랜 시간이 걸린다. 모든 빈들을 등록하기 때문에 의존성을 …","fields":{"slug":"/integration-test-slice-test/"},"frontmatter":{"date":"August 01, 2022","update":"Aug 01, 2022","title":"통합 테스트와 슬라이스 테스트","tags":["매트","BE","통합 테스트","슬라이스 테스트"]}},{"excerpt":"이 글은 우테코 달록팀 크루 '리버'가 작성했습니다. 글을 쓰게 된 계기 우아한테크코스 레벨3 프로젝트를 진행하면서 클라이언트와 서버의 통신에 SSL 인증서를 적용하여 HTTPS 통신을 하도록 하였다.\nHTTPS의 통신과정에 대한 이해를 공유하기 위해 글을 작성하고자 한다. HTTPS 는 SSL(Secure Sokect Layer) 위에 를 얹어서 보안이…","fields":{"slug":"/ssl_protocol/"},"frontmatter":{"date":"July 31, 2022","update":"Jul 31, 2022","title":"SSL을 통한 HTTPS통신 과정","tags":["HTTPS"]}},{"excerpt":"이 글은 우테코 달록팀 크루 '리버'가 작성했습니다. 글을 쓰게 된 계기 우테코 레벨3 프로젝트를 진행하면서, HTTPS 통신을 적용하기 위해 NGINX에 대한 이해가 필요했다.\n그래서 NGINX에 대한 이해를 돕기위해 글을 작성하고자 한다. NGINX란? Nginx는 WS(Web Server)의 일종이다. 주로 정적 컨텐츠를 제공하거나 ReversePr…","fields":{"slug":"/what_is_nginx/"},"frontmatter":{"date":"July 30, 2022","update":"Jul 30, 2022","title":"NGINX 란?","tags":["WS","NGINX"]}},{"excerpt":"이 글은 우테코 달록팀 크루 파랑이 작성했습니다. 문제 에서 카테고리 수정 기능에 대한 테스트가 터졌다.  시 다른 회원의 id를 넣으면 이 발생해야 하는데 아무런 예외도 발생하지 않았다. 더 이상한 점은 단독으로 돌렸을 때는 잘 돌아가지만 전체 테스트를 돌리면 터진다는 것이다. 테스트 격리에 문제가 있어 보였다. 디버깅을 해보았다.  MEMBER까지 저…","fields":{"slug":"/test-fixture-constant/"},"frontmatter":{"date":"July 27, 2022","update":"Jul 27, 2022","title":"테스트에서 Entity 객체를 상수로 두면 안 되는 이유","tags":["Spring","test fixture","상수"]}},{"excerpt":"이 글은 우테코 달록팀 크루 '매트'가 작성했습니다. properties 객체로 다루기 Spring에서 이나 에 존재하는 값을 불러오는 방법에는 대표적으로  애노테이션을 사용한 방법과 를 사용한 방법이 존재한다. 두 방식을 직접 적용해 본 뒤 차이와 이점에 대해 알아보려 한다. @Value 사용하기 는 기본적으로 설정 정보를 단일값으로 주입 받기 위해 사…","fields":{"slug":"/properties-to-object/"},"frontmatter":{"date":"July 27, 2022","update":"Jul 27, 2022","title":"properties 객체로 다루기","tags":["properties","Value","ConfigurationProperties"]}},{"excerpt":"이 글은 우테코 달록팀 크루 '리버'가 작성했습니다. Rest Docs Spring Rest Docs는 테스트 코드 기반으로 자동으로 Rest API 문서를 작성 할 수 있도록 도와주는 프레임 워크이다. Rest Docs와 Swagger 자바 문서 자동화에는 주로 Rest Docs와 Swagger가 사용된다.\n각 자동화 프레임 워크의 장단점을 살펴보자.\n…","fields":{"slug":"/apply-rest-docs/"},"frontmatter":{"date":"July 26, 2022","update":"Jul 26, 2022","title":"MockMvc를 사용한 Spring RestDocs","tags":["Spring","Rest API"]}},{"excerpt":"이 글은 우테코 달록팀 크루 '리버'가 작성했습니다. 들어가기에 앞서 이전 포스팅에서 SQL 중심적인 개발의 문제점을 살펴보고 객체 중심적인 개발을 하기위한 JAVA의 JPA를 가볍게 언급해보았다. 그렇다면, JPA는 어떠한 매커니즘으로 JAVA에서 작동할까?\n이번 포스팅에서 JPA의 구동방식을 자세히 알아보자.   JPA 구동방식 우선, 아래의 그림을 …","fields":{"slug":"/mechanism-of-jpa/"},"frontmatter":{"date":"July 26, 2022","update":"Jul 26, 2022","title":"JPA 작동 메커니즘","tags":["JPA"]}},{"excerpt":"이 글은 우테코 달록팀 크루 후디가 작성했습니다. 안녕하세요, 우테코 달록팀 후디입니다. 바로 직전 포스팅으로 달록팀 백엔드의 배포 환경과 지속적 배포 환경을 구축한 방법을 소개해드렸었죠. 이번 포스팅에서는 프론트엔드의 배포 환경과 지속적 배포 환경 구성을 소개해드리려고 합니다. 바로 시작할까요? 프론트엔드 CD 다이어그램  프론트엔드의 지속적 배포 과정…","fields":{"slug":"/continuous-deploy-with-jenkins-2-frontend/"},"frontmatter":{"date":"July 24, 2022","update":null,"title":"젠킨스를 사용한 달록팀의 지속적 배포 환경 구축기 (2) - 프론트엔드편","tags":["DevOps"]}},{"excerpt":"이 글은 우테코 달록팀 크루 후디가 작성했습니다. 안녕하세요, 달록팀 후디입니다. 지난번 포스팅에서 달록팀이 도커를 활용하여 EC2 인스턴스에 도커를 설치한 과정을 이야기 드렸었죠. 이번 포스팅에서는 젠킨스를 활용해서 백엔드와 프론트엔드에 지속적 배포 환경을 구성한 과정에 대해 이야기 드리려고 합니다. 달록팀 지속적 배포 환경 일단 현재 구성된 달록팀의 …","fields":{"slug":"/continuous-deploy-with-jenkins-1-backend/"},"frontmatter":{"date":"July 24, 2022","update":null,"title":"젠킨스를 사용한 달록팀의 지속적 배포 환경 구축기 (1) - 백엔드편","tags":["DevOps"]}},{"excerpt":"이 글은 우테코 달록팀 크루 '매트'가 작성했습니다. 외부와 의존성 분리하기 도메인 로직은 우리가 지켜야할 매우 소중한 비즈니스 로직들이 담겨있다. 이러한 도메인 로직들은 변경이 최소화되어야 한다. 그렇기 때문에 외부와의 의존성을 최소화 해야 한다.  인터페이스 활용하기 우선 우리가 지금까지 학습한 것 중 객체 간의 의존성을 약하게 만들어 줄 수 있는 수…","fields":{"slug":"/separated-interface/"},"frontmatter":{"date":"July 24, 2022","update":"Jul 24, 2022","title":"외부와 의존성 분리하기","tags":["매트","BE","분리된 인터페이스","의존성 분리"]}},{"excerpt":"이 글은 우테코 달록팀 크루 후디가 작성했습니다. 안녕하세요, 우테코 달록팀 후디입니다. 이번 스프린트에서는 저는 배포와 CI/CD와 같이 인프라와 관련된 태스크에 집중하고 있습니다. 지난번 포스팅으로 달록팀이 쉘 스크립트를 통해 배포 자동화를 구축한 이야기를 했었죠. 하지만 새로운 기능이 병합될 때 마다 SSH로 EC2 인스턴스에 접속하여 쉘 스크립트를…","fields":{"slug":"/install-jenkins-with-docker-on-ec2/"},"frontmatter":{"date":"July 21, 2022","update":null,"title":"EC2 환경에서 도커를 활용한 젠킨스 설치하기","tags":["DevOps","Jenkins"]}},{"excerpt":"이 글은 우테코 달록팀 크루 후디가 작성했습니다. 웹서비스 개발팀은 새롭게 개발한 서비스의 기능을 어떻게 사용자에게 전달할까요? 새로운 기능이 메인 브랜치에 병합될 때 마다 EC2 인스턴스에 접속하여 브랜치를 Pull 하고, 프로젝트를 빌드하고, 현재 동작중인 어플리케이션의 프로세스를 종료하고, 새롭게 빌드된 어플리케이션의 프로세스를 띄우는 과정... 배…","fields":{"slug":"/deploy-automation-with-shell-script/"},"frontmatter":{"date":"July 19, 2022","update":null,"title":"쉘 스크립트와 함께하는 달록의 스프링부트 어플리케이션 배포 자동화","tags":["DevOps"]}},{"excerpt":"이 글은 우테코 달록팀 크루 파랑이 작성했습니다. auditing이란 엔티티와 관련된 이벤트(insert, update, delete)를 추적하고 기록하는 것을 의미한다. 모든 엔티티에 생성일시, 수정일시, 생성한 사람을 추가하고 싶은 경우를 생각해보자. 모든 엔티티에 생성일시, 수정일시, 생성한 사람에 대한 필드를 일일이 구현해주어야 한다. 이렇게 되면…","fields":{"slug":"/data-jpa-auditing/"},"frontmatter":{"date":"July 18, 2022","update":"Jul 18, 2022","title":"Spring Data JPA의 Auditing","tags":["Spring","Data JPA","Auditing"]}},{"excerpt":"이 글은 우테코 달록팀 크루 파랑이 작성했습니다. Spring Data JPA에서는 Pagination을 위한 두 가지 객체를 제공한다. 바로 Slice와 Page다. Repository 코드를 먼저 보자. 메서드를 보면 파라미터로  객체를 받는다.  객체는 Pagination을 위한 정보를 저장하는 객체다.  인터페이스의 구현체인 의 인스턴스를 생성하여…","fields":{"slug":"/data-jpa-slice-page/"},"frontmatter":{"date":"July 18, 2022","update":"Jul 18, 2022","title":"Spring Data JPA의 Slice & Page","tags":["Spring","Data JPA","Slice","Page"]}},{"excerpt":"이 글은 우테코 달록팀 크루 매트가 작성했습니다. 달록에 적절한 패키지 구조 고민하기 우리는 프로젝트를 진행하며 어떠한 패키지 구조를 구성할지 고민하게 된다. 보통 패키지 구조를 나누는 대표적인 방법으로 , 로 나눌 수 있다. 계층별 패키지 구조 계층형 구조는 각 계층을 대표하는 패키지를 기준으로 코드를 구성한다. 계층형 구조의 가장 큰 장점은 해당 프로…","fields":{"slug":"/package-structure/"},"frontmatter":{"date":"July 18, 2022","update":"Jul 18, 2022","title":"달록에 적절한 패키지 구조 고민하기","tags":["매트","BE","패키지 구조"]}},{"excerpt":"이 글은 우테코 달록팀 크루 나인이 작성했습니다. 🎯 \"무한 스크롤을 구현해보세요!\" 어떻게 구현하실 건가요? 무한 스크롤을 처음 마주했을때 🤔 저는 처음 무한 스크롤을 구현할 때 다음과 같은 방식을 사용했어요. scroll event 사용하기 우테코 레벨1 유튜브 미션 처음 제가 무한 스크롤을 구현했던 방법은 다음과 같습니다. 바로 스크롤 이벤트와 of…","fields":{"slug":"/infinite-scroll/"},"frontmatter":{"date":"July 18, 2022","update":null,"title":"React에서 무한 스크롤 구현하기","tags":["react"]}},{"excerpt":"이 글은 우테코 달록팀 크루 매트가 작성했습니다. Git-flow git 브랜치 전략 중 하나이다, 이것은 어떠한 기능을 나타내는 것이 아니라 방법론이다. 각각의 프로젝트와 개발 환경에 따라 알맞게 수정하여 사용해야 한다. 이 게시글은 git을 알고 사용해 본 경험이 있다는 것을 전제로 작성하였다. 또한 직접 프로젝트에 적용하고 연습하고 있기 때문에 정답…","fields":{"slug":"/git-branch-strategy/"},"frontmatter":{"date":"July 12, 2022","update":"Jul 12, 2022","title":"달록팀의 git 브랜치 전략을 소개합니다.","tags":["매트","BE","git","git-flow"]}},{"excerpt":"이 글은 우테코 달록팀 크루 후디가 작성했습니다. 배경 우테코 레벨3 달록 팀에서 메소드의 파라미터에는 반드시  키워드를 붙이도록 컨벤션을 정했습니다. 이유는 무엇일까요? 일반적으로 가변적인 변수는 프로그램의 흐름을 예측하기 어렵게 만듭니다. 따라서 변수를 가변적으로 만드는 것이 중요한데, 자바에서는 변수의 재할당을 막기 위해  키워드를 사용합니다. 물론…","fields":{"slug":"/intellij-final-keyword/"},"frontmatter":{"date":"July 12, 2022","update":null,"title":"IntelliJ에서 메소드 추출한 메소드의 파라미터에 final 키워드 자동 추가하기","tags":["intellij"]}},{"excerpt":"이 글은 우테코 달록팀 크루 리버가 작성했습니다. JPA 등장배경 1990년대 인터넷이 보급되면서 온라인 비지니스가 활성화 되었다.\n자연스럽게, 온라인 비지니스에서 DB에 데이터를 저장하고 가져올때 사용할 Connection Connector에 대한 니즈가 높아졌다.\n그래서 각 언어들에서 DB Connection을 지원하는 API 기술들이 등장하였다. 이…","fields":{"slug":"/appearance-background-of-jpa/"},"frontmatter":{"date":"July 07, 2022","update":"Jul 07, 2022","title":"JPA 등장배경","tags":["JPA"]}}]}},"pageContext":{}},"staticQueryHashes":[]}