{"componentChunkName":"component---src-templates-series-jsx","path":"/series/달록팀-CI/CD-이야기","result":{"data":{"posts":{"nodes":[{"excerpt":"이 글은 우테코 달록팀 크루 후디가 작성했습니다. 웹서비스 개발팀은 새롭게 개발한 서비스의 기능을 어떻게 사용자에게 전달할까요? 새로운 기능이 메인 브랜치에 병합될 때 마다 EC2 인스턴스에 접속하여 브랜치를 Pull 하고, 프로젝트를 빌드하고, 현재 동작중인 어플리케이션의 프로세스를 종료하고, 새롭게 빌드된 어플리케이션의 프로세스를 띄우는 과정... 배…","fields":{"slug":"/deploy-automation-with-shell-script/"},"frontmatter":{"date":"July 19, 2022","update":null,"title":"쉘 스크립트와 함께하는 달록의 스프링부트 어플리케이션 배포 자동화","tags":["DevOps"]}},{"excerpt":"이 글은 우테코 달록팀 크루 후디가 작성했습니다. 안녕하세요, 우테코 달록팀 후디입니다. 이번 스프린트에서는 저는 배포와 CI/CD와 같이 인프라와 관련된 태스크에 집중하고 있습니다. 지난번 포스팅으로 달록팀이 쉘 스크립트를 통해 배포 자동화를 구축한 이야기를 했었죠. 하지만 새로운 기능이 병합될 때 마다 SSH로 EC2 인스턴스에 접속하여 쉘 스크립트를…","fields":{"slug":"/install-jenkins-with-docker-on-ec2/"},"frontmatter":{"date":"July 21, 2022","update":null,"title":"EC2 환경에서 도커를 활용한 젠킨스 설치하기","tags":["DevOps","Jenkins"]}},{"excerpt":"프론트엔드의 지속적 배포 과정도 백엔드와 크게 다른점이 없습니다. PR이 생성되고, 병합되고, 이 이벤트가 Webhook을 통해 젠킨스 서버에 전달됩니다. 젠킨스 서버는 Webpack을 이용하여 리액트 프로젝트를 빌드하고, 과 를 생성합니다. 달록의 프론트엔드 EC2 인스턴스에는 NGINX가 도커 컨테이너로 띄워져 있는데요, 생성된 정적파일은 이 NGIN…","fields":{"slug":"/continuous-deploy-with-jenkins-2-frontend/"},"frontmatter":{"date":"July 23, 2022","update":null,"title":"젠킨스를 사용한 달록팀의 지속적 배포 환경 구축기 (2) - 프론트엔드편","tags":["DevOps"]}},{"excerpt":"이 글은 우테코 달록팀 크루 후디가 작성했습니다. 안녕하세요, 달록팀 후디입니다. 지난번 포스팅에서 달록팀이 도커를 활용하여 EC2 인스턴스에 도커를 설치한 과정을 이야기 드렸었죠. 이번 포스팅에서는 젠킨스를 활용해서 백엔드와 프론트엔드에 지속적 배포 환경을 구성한 과정에 대해 이야기 드리려고 합니다. 달록팀 지속적 배포 환경 일단 현재 구성된 달록팀의 …","fields":{"slug":"/continuous-deploy-with-jenkins-1-backend/"},"frontmatter":{"date":"July 24, 2022","update":null,"title":"젠킨스를 사용한 달록팀의 지속적 배포 환경 구축기 (1) - 백엔드편","tags":["DevOps"]}}]}},"pageContext":{"series":"달록팀 CI/CD 이야기"}},"staticQueryHashes":[]}